# Security hardening for GitHub Actions
# https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions

name: 'Harja: Build and deploy to ECS'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Valitse deploy-ympäristö'
        type: environment
        required: true
 # Käynnistä workflow automaattisesti, kun Harja: Test develop on suoriutunut loppuun
  workflow_run:
    workflows: [ "Harja: Test develop" ]
    branches:
      - develop
    types:
      - completed


env:
  GH_DOCKER_REGISTRY: ghcr.io


jobs:
  build-harja:
    runs-on: ubuntu-latest
    # README: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
    permissions:
      # Contents read lupaa tarvitaan checkout actionissa
      contents: read
      # Packages read lupaa tarvitaan Harjan testaukseen tarkoitettujen Docker imageiden pullaamiseen
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Testitietokantaa tarvitaan buildin yhteydessä
      - name: Start test database
        uses: ./.github/actions/start-test-db
        with:
          registry: ${{ env.GH_DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          # Katso saatavilla olevat harjadb servicet docker-compose.yml:stä (esim. harjadb-latest)
          # Käytetään uusinta saatavilla olevaa testidb:tä AWS buildeissa.
          service-name: harjadb-latest

      # Huom: Build-action tarvitsee testitietokannan taustalle ennen buildin ajoa
      - name: Build Harja Uberjar
        uses: ./.github/actions/build-harja-app
        with:
          build-laadunseuranta: 'false'

      # Uploadaa build-artifact. Deploy-workflow lataa sen myöhemmässä vaiheessa.
      - name: Upload uberjar as artifact
        uses: actions/upload-artifact@v3
        with:
          name: harja-uberjar
          path: ./target/harja-0.0.1-SNAPSHOT-standalone.jar
          if-no-files-found: error
          retention-days: 1

      # Docs: https://github.com/slackapi/slack-github-action
      - name: Send deploy failure message to Slack
        id: slack
        uses: slackapi/slack-github-action@e28cf165c92ffef168d23c5c9000cffc8a25e117
        if: failure()
        with:
          # Slack Block Kit -tyyppinen rikastettu viesti
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":alert-slow: Harjan build epäonnistui! Automaattista deploymenttia ei tehdä.\n${{ env.JOB_RUN_URL }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          JOB_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}


  # -- Deployment -- #

  deploy-to-ecs-manually:
    uses: ./.github/workflows/reusable_deploy-harja-image-to-ecs.yml
    if: ${{ github.event_name == 'workflow_dispatch' }}
    needs: build-harja
    # Huom. parametrit ja salaisudet on määritelty GitHub environmenteissa
    # README: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
    permissions:
      # OIDC tokenia tarvitaan AWS jobeissa roolin omaksumiseen
      id-token: write
      # Contents read lupaa tarvitaan checkout actionissa
      contents: read
    with:
      environment: ${{ github.event.inputs.environment }}
    # Huom. Tietoturvasyistä johtuen, salaisuuksia ei voi hakea automaattisesti envinronmentista reusable workfloweissa
    #       Tässä määritetään mitkä yksittäiset salaisuudet reusable workflow saa lukea GitHub environmentista.
    #       Vaihtoehtoisesti, voi käyttää secrets: inherit toimintoa, jolloin reusable workflow saa kaikki salaisuudet
    #       kuin kutsuva workflowikin.
    secrets:
      aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  # Automaattinen matrix-deployment useaan ympäristöön (workflow_run triggerillä)
  deploy-to-ecs-matrix:
    uses: ./.github/workflows/reusable_deploy-harja-image-to-ecs.yml
    if: ${{ github.event_name == 'workflow_run' }}
    needs: build-harja
    # Deployment ajetaan automaattisesti dev ympäristöön ja stg ympäristöön
    # TODO: Suunniteltava miten prod-deployment hoidetaan automaattisesti
    #       tai semi-automaattisesti hyväksyntäprosessilla (github environment protection rules)
    strategy:
      matrix:
        environment: [dev, stg]
    # Huom. parametrit ja salaisudet on määritelty GitHub environmenteissa
    # README: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
    permissions:
      # OIDC tokenia tarvitaan AWS jobeissa roolin omaksumiseen
      id-token: write
      # Contents read lupaa tarvitaan checkout actionissa
      contents: read
    with:
      environment: ${{ matrix.environment }}
    # Huom. Tietoturvasyistä johtuen, salaisuuksia ei voi hakea automaattisesti envinronmentista reusable workfloweissa
    #       Tässä määritetään mitkä yksittäiset salaisuudet reusable workflow saa lukea GitHub environmentista.
    #       Vaihtoehtoisesti, voi käyttää secrets: inherit toimintoa, jolloin reusable workflow saa kaikki salaisuudet
    #       kuin kutsuva workflowikin.
    secrets:
      aws_account_id: ${{ secrets.AWS_ACCOUNT_ID }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

