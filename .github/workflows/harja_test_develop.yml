# Security hardening for GitHub Actions
# https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions

name: 'Harja: Test develop'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

on:
  # Manuaalisen käynnistyksen asetukset
  workflow_dispatch:
  # Workflow ajetaan aina kun develop-branchiin tulee muutos (esim. PR mergetetään)
  push:
    branches:
      - develop

jobs:
  tests:
    uses: ./.github/workflows/reusable_run_app_tests.yml
    # Permissions
    # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#access-and-permissions
    permissions:
      # Contents read lupaa tarvitaan checkout actionissa
      contents: read
      # Packages read lupaa tarvitaan Harjan testaukseen tarkoitettujen Docker imageiden pullaamiseen
      packages: read
      # Actions write oikeudella voidaan esim. listata ja poistaa artifacteja
      actions: write
      # Tarvitaan test-reportin julkaisuun PR:ssä
      checks: write
    strategy:
      # Halutaan, että kaikki testit käydään läpi.
      # Yksittäinen flaky testi ei saa kaataa koko testimatriisia.
      fail-fast: false
      max-parallel: 2
      matrix:
        # Katso saatavilla olevat harjadb servicet docker-compose.yml:stä
        configs: [
          { testDBService: "harjadb-latest", e2eBrowsers: [ 'chrome' ], artifactPrefix: 'harjadb-latest_' },
          #{ testDBService: "harjadb-13-3.1", e2eBrowsers: ['chrome'], artifactPrefix: 'harjadb-13-3.1_' },
        ]

    with:
      test-db-service: ${{ matrix.configs.testDBService }}
      e2e-browsers: ${{ toJSON(matrix.configs.e2eBrowsers) }}
      # Artifactien nimet täytyy prefixata, jotta jokainen matrix-job tuottaa uniikit build artifactit
      # ja nimeltään toisistaan erottuvat Test Reportit
      artifact-prefix: ${{ matrix.configs.artifactPrefix }}
      # Ei tehdä turhaan lint-testausta develop-branchille. Löydökset käsitellään PR:ien yhteydessä.
      lint-clj: 'false'
      # Develop-branchille ajetaan täysi Harja-build, joka kestää pidempään.
      build-harja: 'full'


  # Tarkistaa testijobin yleisen statuksen ja lähettää notifikaation, mikäli jotain meni pieleen
  check-status-and-notify:
    needs: tests
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send deploy failure message to Slack
        id: slack
        uses: slackapi/slack-github-action@6c661ce58804a1a20f6dc5fbee7f0381b469e001
        # Lähetetään virheviesti, mikäli tämä tai tests-jobi ei palauta success
        if: ${{ job.status != 'success' || needs.tests.result != 'success' }}
        with:
          # Slack Block Kit -tyyppinen rikastettu viesti
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":warning: Develop-branchin testeissä tapahtui virhe!\n${{ env.JOB_RUN_URL }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          JOB_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
