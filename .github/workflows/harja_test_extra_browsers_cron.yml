# Security hardening for GitHub Actions
# https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions

# Pääasiassa E2E-testit ajetaan chromea vasten Pull Requesteissa defaulttina.
# Tässä workflowssa ajetaan säännölisesti ajastettuna Cypress-testejä muita suosittuja selaimia vasten selainyhteensopivuuden
# varmistamiseksi.

# Tällä hetkellä testataan selaimilla: Microsoft Edge
# Muita selaimia voidaan lisätä Cypress Dockerimageen tarpeen vaatiessa

name: '[Scheduled] Harja: E2E test extra browsers'
run-name: 'Harja: E2E test extra browsers: Edge'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

on:
  # Manuaalisen käynnistyksen asetukset
  workflow_dispatch:
  # Ajastettu käynnistys (Ajetaan testit joka maanantai klo 9)
  schedule:
    - cron: '0 9 * * MON'


jobs:
  tests:
    uses: ./.github/workflows/reusable_run_app_tests.yml
    # Permissions
    # https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
    # https://docs.github.com/en/actions/using-workflows/reusing-workflows#access-and-permissions
    permissions:
      # Contents read lupaa tarvitaan checkout actionissa
      contents: read
      # Packages read lupaa tarvitaan Harjan testaukseen tarkoitettujen Docker imageiden pullaamiseen
      packages: read
      # Actions write oikeudella voidaan esim. listata ja poistaa artifacteja
      actions: write
      # Tarvitaan test-reportin julkaisuun PR:ssä
      checks: write

    with:
      test-db-service: harjadb-latest
      e2e-browsers: "['edge']"
      e2e-tests: 'true'
      build-harja: 'light'
      # Disabloidaan kaikki muut testit
      lint-clj: 'false'
      backend-tests: 'false'
      basic-tests: 'false'
      integration-tests: 'false'

  # Tarkistaa testijobin yleisen statuksen ja lähettää notifikaation, mikäli jotain meni pieleen
  check-status-and-notify:
    needs: tests
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Send deploy failure message to Slack
        id: slack
        uses: slackapi/slack-github-action@6c661ce58804a1a20f6dc5fbee7f0381b469e001
        # Lähetetään virheviesti, mikäli tämä tai tests-jobi ei palauta success
        if: ${{ job.status != 'success' || needs.tests.result != 'success' }}
        with:
          # Slack Block Kit -tyyppinen rikastettu viesti
          payload: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":warning: Ajastetuissa selaintesteissä tapahtui virhe!\n${{ env.JOB_RUN_URL }}"
                  }
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
          JOB_RUN_URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

