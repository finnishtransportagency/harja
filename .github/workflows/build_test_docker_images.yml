# Security hardening for GitHub Actions
# https://docs.github.com/en/actions/security-guides/security-hardening-for-github-actions#using-third-party-actions

name: 'Tools: Build test docker images for GH Actions and development'

concurrency:
  # Sallitaan vain yksi ajo kerrallaan, koska lopputulos pushataan container registryyn
  group: ${{ github.workflow }}
  cancel-in-progress: true

on:
  workflow_dispatch:
    inputs:
      dockerfile:
        description: 'Valitse Dockerfile'
        type: choice
        required: true
        options:
          - tietokanta
          - cypress
          - activemq
      update-latest:
        description: "Päivitetäänkö 'latest'-versio?"
        type: boolean
        default: false
        required: true
      tag:
        description: "Julkaistava tag (esim. 13.11-3.3.2)"
        type: string
        required: false


# Tässä voi määritellä yhteiset permissionit kaikille jobeille workflowissa tarvittaessa
# README: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
#permissions:


env:
  GH_DOCKER_REGISTRY: ghcr.io

jobs:
  build-and-push-dockerfile:
    runs-on: ubuntu-latest
    # README: https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token
    permissions:
      # Contents read lupaa tarvitaan checkout actionissa
      contents: read
      # Packages write lupaa tarvitaan Harjan testaukseen tarkoitettujen Docker imageiden päivitykseen
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Parse inputs
        id: parsed-inputs
        env:
          TAG: ${{ inputs.tag }}
          UPDATE_LATEST: ${{ inputs.update-latest }}
        run: |
          echo "Processing inputs"
          
          tags=()
          
          if [[ -n "$TAG" ]]; then
            tags+=("<image>:$TAG")
          fi
          
          if [[ "$UPDATE_LATEST" == 'true' ]]; then
            tags+=("<image>:$TAG")
          fi
          
          echo "tags=${tags[*]}" | tr ' ' ',' >> $GITHUB_OUTPUT
          

        # Ota QEMU ja Buildx käyttöön multi-arch buildeja varten
        # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GH_DOCKER_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # -- Build & Push harja_harjadb-image --
      - id: tietokanta-tags
        if: ${{ inputs.dockerfile == 'tietokanta' }}
        env:
          TAGS: ${{ steps.parsed-inputs.outputs.tags }}
        run: echo "tags=${TAGS//<image>/finnishtransportagency\/harja_harjadb}" >> $GITHUB_OUTPUT
      - name: Build and push tietokanta
        uses: docker/build-push-action@v5
        if: ${{ inputs.dockerfile == 'tietokanta' }}
        env:
          TAGS: ${{ steps.tietokanta-tags.outputs.tags }}
          BUILD_PLATFORMS: linux/arm64,linux/amd64
        with:
          context: .github/docker/tietokanta
          platforms: ${{ env.BUILD_PLATFORMS }}
          tags: ${{ env.TAGS }}
          labels: |
            "commit=${{ github.sha }}"
            org.opencontainers.image.title=harjadb
            org.opencontainers.image.source=https://github.com/finnishtransportagency/harja
          # Cacheta, jotta tulevaisuuden buildit ovat nopeampia. ARM-buildissa kestää yli 30 minuuttia.
          # https://docs.docker.com/build/ci/github-actions/cache/#registry-cache
          cache-from: type=registry,ref=finnishtransportagency/harja_harjadb:buildcache
          cache-to: type=registry,ref=finnishtransportagency/harja_harjadb:buildcache,mode=max
          # On myös mahdollista käyttää (experimental) GH Actions cachea: https://docs.docker.com/build/cache/backends/gha/
          #cache-from: type=gha
          #cache-to: type=gha,mode=max
          push: false


      # -- Build & Push harja_cypress-image --
      - name: Build and push Cypress
        if: ${{ inputs.dockerfile == 'cypress' }}
        run: |
          echo "Build Cypress"
          cd .github/docker/cypress
          
          ./build-image.sh

      # -- Build & Push harja_activemq-image --
      - name: Build and push ActiveMQ
        if: ${{ inputs.dockerfile == 'activemq' }}
        run: |
          echo "Build ActiveMQ"
          cd .github/docker/activemq
          
          ./build-image
