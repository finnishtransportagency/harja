import {avaaKustannussuunnittelu} from "../support/kustannussuunnitelmaFns.js";
import * as ks from "../support/kustannussuunnitelmaFns.js";
import {kuluvaHoitokausiAlkuvuosi} from "../support/apurit";

const indeksit = [];

function alustaTampereenUrakka() {
    ks.alustaKanta('Tampereen MHU 2022-2026');
}

describe('Johto- & Hallintokorvaukset, 2022->', () => {        
    before(function () {
        alustaTampereenUrakka();
        avaaKustannussuunnittelu('Tampereen MHU 2022-2026', 'Pirkanmaa', indeksit);
    })
    
    describe('Ennen urakkaa valmistelukausi', () => {
        it('Taulukossa rivi näkyy ekalla hoitovuodella', () => {
            let kuluvaHKVuosi = kuluvaHoitokausiAlkuvuosi();
            let kuluvaHoitokausiNro = kuluvaHKVuosi - 2022 + 1;

            let hoitokausiNyt = kuluvaHoitokausiNro + ". hoitovuosi (" + kuluvaHKVuosi + "—" + (kuluvaHKVuosi + 1) + ")";
            let valittavaHoitokausi = "1. hoitovuosi (2022—2023)";
            ks.valitseHoitokausi(hoitokausiNyt, valittavaHoitokausi);

            cy.get('[data-cy=tuntimaarat-ja-palkat-taulukko-suodattimet]')
                .find('.pudotusvalikko-filter')
                .find('.valittu.overflow-ellipsis').contains('1. hoitovuosi').should('exist')
            cy.get('#toimenkuvat-taulukko')
                .contains('Valmistelukausi ennen urakka-ajan alkua')
                .should('exist')
        })
        it('Taulukossa rivi piilotetaan muilla hoitovuosilla', () => {        
            cy.get('[data-cy=tuntimaarat-ja-palkat-taulukko-suodattimet]')
                .find('.pudotusvalikko-filter')
                .find('.valittu.overflow-ellipsis')
                .click()
            cy.get('[data-cy=tuntimaarat-ja-palkat-taulukko-suodattimet]')
                .find('.pudotusvalikko-filter')
                .contains('3. hoitovuosi')
                .click()
            cy.get('#toimenkuvat-taulukko')
                .contains('Valmistelukausi ennen urakka-ajan alkua')
                .should('not.exist')
            cy.get('[data-cy=tuntimaarat-ja-palkat-taulukko-suodattimet]')
                .find('.pudotusvalikko-filter')
                .find('.valittu.overflow-ellipsis')
                .click()
            cy.get('[data-cy=tuntimaarat-ja-palkat-taulukko-suodattimet]')
                .find('.pudotusvalikko-filter')
                .contains('1. hoitovuosi')
                .click()
        })
        it('Riviä ei voi expandata', () => {
            cy.get('#toimenkuvat-taulukko')
                .contains('Valmistelukausi ennen urakka-ajan alkua')
                .next()
                .children()
                .should('have.length', 0)
        })
        it('Taulukkoon voi syöttää summia', () => {
            cy.intercept('POST', '_/tallenna-budjettitavoite').as('tallenna-budjettitavoite');
            cy.intercept('POST', '_/tallenna-johto-ja-hallintokorvaukset').as('tallenna-jhk')
            cy.get('#toimenkuvat-taulukko')
                .contains('Valmistelukausi ennen urakka-ajan alkua')
                .next().next()
                .find('input')
                .clear()
                .type('1234')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)
                       
        })
        it('Yhteenvedot ovat päivittyneet', () => {
            cy.get('#johto-ja-hallintokorvaus-yhteenveto-taulukko')
                .contains('Valmistelukausi ennen urakka-ajan alkua (ennen urakkaa)')
                .next()
                .contains('234')
            cy.get('[data-cy=johto-ja-hallintokorvaus-hintalaskuri]')
                .contains('1. vuosi')
                .next()
                .contains('234,00')
        })
        it('Summia voi myös muokata', () => {        
            cy.intercept('POST', '_/tallenna-budjettitavoite').as('tallenna-budjettitavoite');
            cy.intercept('POST', '_/tallenna-johto-ja-hallintokorvaukset').as('tallenna-jhk')
            cy.get('#toimenkuvat-taulukko')
                .contains('Valmistelukausi ennen urakka-ajan alkua')
                .next().next()
                .find('input')
                .clear()
                .type('777')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)

        })
        
        it('Yhteenvedot ovat päivittyneet muokkauksen jälkeen', () => {
            cy.get('#johto-ja-hallintokorvaus-yhteenveto-taulukko')
                .contains('Valmistelukausi ennen urakka-ajan alkua (ennen urakkaa)')
                .next()
                .should('have.text', '777,00')
            cy.get('[data-cy=johto-ja-hallintokorvaus-hintalaskuri]')
                .contains('1. vuosi')
                .next()
                .should('have.text', '777,00 €')
        })
    })

    describe('Vakiotoimenkuvat', () => {
        it('Vakiotoimenkuvien vuosisummat voi syöttää', () => {
            cy.intercept('POST', '_/tallenna-budjettitavoite').as('tallenna-budjettitavoite');
            cy.intercept('POST', '_/tallenna-johto-ja-hallintokorvaukset').as('tallenna-jhk')
            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .next().next()
                .find('input')
                .clear()
                .type('778')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)

            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .parent()
                .next().next()
                .find('input')
                .clear()
                .type('778')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)

            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .parent()
                .next().next()
                .next().next()
                .find('input')
                .clear()
                .type('778')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)

            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .parent()
                .next().next()
                .next().next()
                .next().next()
                .find('input')
                .clear()
                .type('778')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)

            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .parent()
                .next().next()
                .next().next()
                .next().next()
                .next().next()
                .find('input')
                .clear()
                .type('778')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)

            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .parent()
                .next().next()
                .next().next()
                .next().next()
                .next().next()
                .next().next()
                .find('input')
                .clear()
                .type('778')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)

            cy.wait(5000)
        })
        it('Vakiotoimenkuvien vuosisummat jakautuvat kuukausille ja viimeisen kuukauden tasaus lasketaan oikein', () => {
            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .next().click()
            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .parent().next().find('table').contains('Syyskuu 2023').next().should('have.text', '64,87')
            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .parent().next().find('table').contains('Elokuu 2023').next().should('have.text', '64,83')
            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .next().click()            
        })
        it('Yhteenvedot ovat päivittyneet oikein', () => {
            cy.get('#johto-ja-hallintokorvaus-yhteenveto-taulukko')
                .contains('Vastuunalainen työnjohtaja')
                .next()
                .contains('778,00').should('exist')
            cy.get('[data-cy=johto-ja-hallintokorvaus-hintalaskuri]')
                .contains('1. vuosi')
                .next()
                .contains('5 445,00').should('exist')
        })
        it('Vakiotoimenkuvien vuosisummia voi muokata', () => {
            cy.intercept('POST', '_/tallenna-budjettitavoite').as('tallenna-budjettitavoite');
            cy.intercept('POST', '_/tallenna-johto-ja-hallintokorvaukset').as('tallenna-jhk')
            cy.get('#toimenkuvat-taulukko')            
                .contains('Vastuunalainen työnjohtaja')
                .parent()
                .next().next()
                .next().next()
                .next().next()
                .next().next()
                .next().next()
                .find('input')
                .clear()
                .type('999')
                .blur()
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)
            cy.wait(5000)
        })
        
        it('Vakiotoimenkuvien summia voi syöttää kuukausille erikseen', () => {
            cy.get('#toimenkuvat-taulukko')            
                .contains('Päätoiminen apulainen')
                .next().click()
            cy.get('#toimenkuvat-taulukko')            
                .contains('Päätoiminen apulainen')
                .parent()
                .next()
                .contains('Suunnittele maksuerät kuukausittain')
                .click()
            cy.get('#toimenkuvat-taulukko')            
                .contains('Päätoiminen apulainen')
                .parent()
                .next()
                .contains('Lokakuu 2022')
                .next()
                .find('input')
                .clear()
                .type('100')
                .blur()
            cy.intercept('POST', '_/tallenna-budjettitavoite')
                .as('tallenna-budjettitavoite');
            cy.intercept('POST', '_/tallenna-johto-ja-hallintokorvaukset')
                .as('tallenna-jhk')
            cy.wait('@tallenna-jhk')
                .its('response.statusCode')
                .should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode')
                .should('equal', 200)
        })
        it('Vakiotoimenkuvien erikseen syotetyt summat palautuvat oikein', () => {
            avaaKustannussuunnittelu('Tampereen MHU 2022-2026', 'Pirkanmaa', indeksit);

            let kuluvaHKVuosi = kuluvaHoitokausiAlkuvuosi();
            let kuluvaHoitokausiNro = kuluvaHKVuosi - 2022 + 1;

            let hoitokausiNyt = kuluvaHoitokausiNro + ". hoitovuosi (" + kuluvaHKVuosi + "—" + (kuluvaHKVuosi + 1) + ")";
            let valittavaHoitokausi = "1. hoitovuosi (2022—2023)";
            ks.valitseHoitokausi(hoitokausiNyt, valittavaHoitokausi);

            cy.get('#toimenkuvat-taulukko')
                .contains('Päätoiminen apulainen')
                .next()
                .click()
                .parent()
                .next()
                .contains('Lokakuu 2022')
                .next()
                .find('input')
                .should('have.value', '100')
            cy.get('#toimenkuvat-taulukko')            
                .contains('Päätoiminen apulainen')
                .next()
                .next()
                .find('input')
                .should('not.exist')
        })
        it('Yhteenvedot ovat päivittyneet oikein', () => {
            cy.get('#johto-ja-hallintokorvaus-yhteenveto-taulukko')
                .contains('Päätoiminen apulainen')
                .next()
                .contains('813,17').should('exist')
            cy.get('#johto-ja-hallintokorvaus-yhteenveto-taulukko')
                .contains('Harjoittelija')
                .next()
                .contains('999,00').should('exist')            
            cy.get('[data-cy=johto-ja-hallintokorvaus-hintalaskuri]')
                .contains('1. vuosi')
                .next()
                .contains('5 701,17').should('exist')
        })
    })

    describe('Omat toimenkuvat', () => {        
        it('Omien toimenkuvien nimet voi vaihtaa', () => {
            cy.intercept('POST', '_/tallenna-toimenkuva').as('tallenna-toimenkuva');
            
            cy.get('#toimenkuvat-taulukko')
                .contains('Harjoittelija')
                .parent()
                .next().next()
                .find('input')
                .first()
                .clear()
                .type('Superkoodari')
                .blur()
            cy.get('#toimenkuvat-taulukko')
                .contains('Harjoittelija')
                .parent()
                .next().next()
                .next().next()
                .find('input')
                .first()
                .clear()
                .type('Superdesigner')
                .blur()
            
            cy.wait('@tallenna-toimenkuva')
                .its('response.statusCode').should('equal', 200)
        })
        it('Omien toimenkuvien vuosisummat voi syöttää', () => {
            cy.intercept('POST', '_/tallenna-toimenkuva').as('tallenna-toimenkuva');
            cy.intercept('POST', '_/tallenna-budjettitavoite').as('tallenna-budjettitavoite');
            cy.intercept('POST', '_/tallenna-johto-ja-hallintokorvaukset').as('tallenna-jhk')
            
            cy.get('#toimenkuvat-taulukko')
                .contains('Harjoittelija')
                .parent()
                .next().next()
                .find('td')
                .first()
                .next().next()
                .find('input')
                .clear()
                .type('1200')
                .blur()
            cy.get('#toimenkuvat-taulukko')
                .contains('Harjoittelija')
                .parent()
                .next().next()
                .next().next()
                .find('td')
                .first()
                .next().next()
                .find('input')
                .clear()
                .type('1200')
                .blur()
            
            cy.wait('@tallenna-toimenkuva')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)
        })
        it('Omien toimenkuvien vuosisummia voi muokata', () => {
            cy.intercept('POST', '_/tallenna-toimenkuva').as('tallenna-toimenkuva');
            cy.intercept('POST', '_/tallenna-budjettitavoite').as('tallenna-budjettitavoite');
            cy.intercept('POST', '_/tallenna-johto-ja-hallintokorvaukset').as('tallenna-jhk')
            
            cy.get('#toimenkuvat-taulukko')
                .contains('Harjoittelija')
                .parent()
                .next().next()
                .find('td')
                .first()
                .next().next()
                .find('input')
                .clear()
                .type('1400')
                .blur()
            cy.get('#toimenkuvat-taulukko')
                .contains('Harjoittelija')
                .parent()
                .next().next()
                .next().next()
                .find('td')
                .first()
                .next().next()
                .find('input')
                .clear()
                .type('1400')
                .blur()
            
            cy.wait('@tallenna-toimenkuva')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-jhk')
                .its('response.statusCode').should('equal', 200)
            cy.wait('@tallenna-budjettitavoite')
                .its('response.statusCode').should('equal', 200)
        })
    })
})
