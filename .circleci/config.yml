version: 2.1

commands:
  odota-tapahtumaa:
    description: "Odottaa tapahtumaa, ennen kuin jatkaa ajamista"
    parameters:
      tapahtuma:
        type: string
      palvelin:
        type: string
        default: "localhost"
      portti:
        type: string
        default: "80"
    steps:
      - run: |
          TAPAHTUMA="$(echo "<< parameters.tapahtuma >>" | sed 's/\./_/g')"
          TIMEOUT=120
          ODOTETTU=0
          NUKU=5
          touch tapahtuman_arvot
          while [[ "$(curl -s -o tapahtuman_arvot -w '%{http_code}' "<< parameters.palvelin >>:<< parameters.portti >>/${TAPAHTUMA}" 2>&1)" != '200' ]]
          do
            echo "Odotetaan tapahtumaa << parameters.tapahtuma >>..."
            sleep ${NUKU}
            ODOTETTU=$((ODOTETTU+${NUKU}))
            if [[ $ODOTETTU -eq $TIMEOUT ]]
            then
               echo "Tapahtuma ${ALKUPERAINEN_TAPAHTUMA} ei tapahtunut ${TIMEOUT} sekunnin sisällä. Lopetetaan kuuntelu"
               rm tapahtuman_arvot
               exit 1
            fi
          done
  julkaise-tapahtuma:
    description: "Julkaisee tapahtuman"
    parameters:
      tapahtuma:
        type: string
      args:
        type: string
      palvelin:
        type: string
        default: "localhost"
      portti:
        type: string
        default: "80"
    steps:
      - run: |
          TAPAHTUMA="tapahtuma=$(echo "<< parameters.tapahtuma >>" | sed 's/\./_/g')"
          ARGS="<< parameters.args >>"
          if [[ -n "$ARGS" ]]
          then
            ARGS="&${ARGS}"
          fi

          touch tmp_vastaus_tiedosto__

          LUONTI_KOODI="$(curl -s -o tmp_vastaus_tiedosto__ -w '%{http_code}' "<< parameters.palvelin >>:<< parameters.portti >>/luo-tapahtuma?${TAPAHTUMA}${ARGS}")"

          if [[ 200 -ne "${LUONTI_KOODI}" ]]
          then
            echo "Tapahtuman << parameters.tapahtuma >> luonti epäonnistui."
            if [[ 422 -eq "${LUONTI_KOODI}" ]]
            then
              cat tmp_vastaus_tiedosto__
            fi
            rm tmp_vastaus_tiedosto__
            exit 1
          else
            rm tmp_vastaus_tiedosto__
          fi
jobs:
  front-testit:
    docker:
      - image: solita/harja-testit:latest # eka image = "primary container"
      - image: solita/harja-tapahtuma:latest
      - image: solita/harjadb:centos-12-circle
        command: >
          bash -c "
          bash odota-tapahtumaa.sh env.git localhost 80;
          source lue-arvot-ymparistomuuttujiin.sh;
          bash dbn-kaynnistys.sh;
          bash julkaise-tapahtuma.sh db.valmis;
          /bin/bash;"

    steps:
      - run: if [[ "${CIRCLE_BRANCH}" =~ \& ]]; then echo "Brancin nimessä on '&' merkki"; exit 1; fi;
      - julkaise-tapahtuma:
          tapahtuma: "env.git"
          args: "BRANCH=${CIRCLE_BRANCH}&COMMIT=${CIRCLE_SHA1}"
      - odota-tapahtumaa:
          tapahtuma: "db.valmis"
      - run: |
          cd /tmp
          bash sisus.bash phantom $CIRCLE_BRANCH

  back-testit:
    docker:
      - image: solita/harja-testit:latest # eka image = "primary container"
      - image: solita/harja-tapahtuma:latest
      - image: solita/harjadb:centos-12-circle
        command: >
          bash -c "
          bash odota-tapahtumaa.sh env.git localhost 80;
          source lue-arvot-ymparistomuuttujiin.sh;
          bash dbn-kaynnistys.sh;
          bash julkaise-tapahtuma.sh db.valmis;
          /bin/bash;"

    steps:
      - run: if [[ "${CIRCLE_BRANCH}" =~ \& ]]; then echo "Brancin nimessä on '&' merkki"; exit 1; fi;
      - julkaise-tapahtuma:
          tapahtuma: "env.git"
          args: "BRANCH=${CIRCLE_BRANCH}&COMMIT=${CIRCLE_SHA1}"
      - odota-tapahtumaa:
          tapahtuma: "db.valmis"
      - run: |
          cd /tmp
          bash sisus.bash test $CIRCLE_BRANCH
  # Tänne voisi alkaa siirtelemään integraatiotestejä
  integraatio-testit:
    docker:
      - image: solita/harja-testit:latest # eka image = "primary container"
      - image: solita/harja-tapahtuma:latest
      - image: solita/harjadb:centos-12-circle
        command: >
          bash -c "
          bash odota-tapahtumaa.sh env.git localhost 80;
          source lue-arvot-ymparistomuuttujiin.sh;
          bash dbn-kaynnistys.sh;
          bash julkaise-tapahtuma.sh db.valmis;
          /bin/bash;"
      - image: solita/harja-activemq:5.15.9
        environment:
          TCP_PORT: 61617
          UI_PORT: 8162
        auth:
          username: solitaharja
          password: $DOCKER_HUB_SALASANA

    steps:
      - run: if [[ "${CIRCLE_BRANCH}" =~ \& ]]; then echo "Brancin nimessä on '&' merkki"; exit 1; fi;
      - julkaise-tapahtuma:
          tapahtuma: "env.git"
          args: "BRANCH=${CIRCLE_BRANCH}&COMMIT=${CIRCLE_SHA1}"
      - odota-tapahtumaa:
          tapahtuma: "db.valmis"
      - run: |
          cd /tmp
          bash sisus.bash integraatio $CIRCLE_BRANCH

  prod-build:
    docker:
      - image: solita/harja-testit:latest # eka image = "primary container"
      - image: solita/harja-tapahtuma:latest
      - image: solita/harjadb:centos-12-circle
        command: >
          bash -c "
          bash odota-tapahtumaa.sh env.git localhost 80;
          source lue-arvot-ymparistomuuttujiin.sh;
          bash dbn-kaynnistys.sh;
          bash julkaise-tapahtuma.sh db.valmis;
          /bin/bash;"

    steps:
      - run: if [[ "${CIRCLE_BRANCH}" =~ \& ]]; then echo "Brancin nimessä on '&' merkki"; exit 1; fi;
      - julkaise-tapahtuma:
          tapahtuma: "env.git"
          args: "BRANCH=${CIRCLE_BRANCH}&COMMIT=${CIRCLE_SHA1}"
      - odota-tapahtumaa:
          tapahtuma: "db.valmis"
      - run:
          no_output_timeout: 60m
          command: |
            cd /tmp
            bash sisus.bash uberjar $CIRCLE_BRANCH
            cd /tmp/harja
            tar cf testidata.tar cypress cypress.json tietokanta
      - persist_to_workspace:
          root: /tmp/harja
          paths:
            - target/harja-0.0.1-SNAPSHOT-standalone.jar
            - testidata.tar
            - asetukset.edn
            - .harja_env

  e2e-testit:
    docker:
      - image: solita/harja-cypress:latest
      - image: solita/harja-tapahtuma:latest
      - image: solita/harjadb:centos-12-circle
        command: >
          bash -c "
          bash odota-tapahtumaa.sh env.git localhost 80;
          source lue-arvot-ymparistomuuttujiin.sh;
          bash dbn-kaynnistys.sh;
          bash julkaise-tapahtuma.sh db.valmis;
          /bin/bash;"
    environment:
      HARJA_SALLI_OLETUSKAYTTAJA: 'true'
      HARJA_DEV_YMPARISTO: 'false'
    parallelism: 1
    steps:
      - run: if [[ "${CIRCLE_BRANCH}" =~ \& ]]; then echo "Brancin nimessä on '&' merkki"; exit 1; fi;
      - julkaise-tapahtuma:
          tapahtuma: "env.git"
          args: "BRANCH=${CIRCLE_BRANCH}&COMMIT=${CIRCLE_SHA1}"
      - odota-tapahtumaa:
          tapahtuma: "db.valmis"
      - attach_workspace:
          at: /tmp/harja

      - deploy:
          command: |
            cd /tmp/cypress-run
            tar xf /tmp/harja/testidata.tar
            npm install transit-js
            cp /tmp/harja/asetukset.edn .
            cp /tmp/harja/.harja_env .
            mkdir -p ../.harja
            echo aaaa > ../.harja/anti-csrf-token
            touch ../.harja/{mml,google-static-maps-key,turi-salasana,ava-salasana,yha-salasana,labyrintti-salasana}
            java -jar /tmp/harja/target/harja-0.0.1-SNAPSHOT-standalone.jar > harja.out 2>&1 &
            for i in $(seq 10); do
              curl localhost:3000 > /dev/null 2>&1 && break
              echo "appis ei käynnissä, odotellaan..."
              sleep 10
            done
            echo "pätkä appiksen logia:"
            echo +++++++++++++++++++
            tail -50 harja.out
            echo +++++++++++++++++++
            echo
            cd /tmp/cypress-run && $(npm bin)/cypress run
      - store_artifacts:
          path: /tmp/cypress-run/cypress/screenshots

workflows:
  version: 2
  build_and_test:
    jobs:
      - prod-build
      - back-testit
      - integraatio-testit
      - front-testit
      - e2e-testit:
          requires:
            - prod-build
